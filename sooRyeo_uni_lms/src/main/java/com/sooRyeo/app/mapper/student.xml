<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="student">

	<select id="selectStudent" resultType="com.sooRyeo.app.domain.Student" parameterType="com.sooRyeo.app.dto.LoginDTO">  <!-- VO에 있는 필드명과 select 해온 컬럼명은 같아야한다!! -->
		SELECT *
		FROM tbl_department JOIN tbl_student
		ON tbl_department.department_seq = tbl_student.fk_department_seq
		WHERE student_id = #{id} AND pwd = #{password}	
	</select>

	<select id="getStudentById" resultType="com.sooRyeo.app.domain.Student" parameterType="int">
		SELECT *
		FROM tbl_department JOIN tbl_student
								 ON tbl_department.department_seq = tbl_student.fk_department_seq
		WHERE student_id = #{studentId}
	</select>
	
	
	
	
	<!-- 수업명, 교수명 select -->
	<resultMap type="HashMap" id="classListMap">
		<result property="professorName" 	column="professorName" 	 javaType="String" />
		<result property="className" 	 	column="className" 		 javaType="String" />
		<result property="department_seq" 	column="department_seq"  javaType="String" />
		<result property="required" 	 	column="required" 		 javaType="String" />
		<result property="course_seq" 		column="course_seq"      javaType="String" />
	</resultMap>
	
	
	<select id="classList" parameterType="int" resultMap="classListMap">
		WITH
		P AS (
		select name, prof_id 
		from tbl_professor
		),
		C AS (
		select curriculum_seq, name, fk_department_seq, required
		from tbl_curriculum
		),
		V AS (
			select course_seq, fk_curriculum_seq, fk_professor_id, fk_student_id
			from tbl_course join tbl_registered_course
			on course_seq = fk_course_seq
		)
		select p.name as professorName,
			   c.name as className,
			   c.fk_department_seq as department_seq,
       		   c.required as required,
       		   v.course_seq as course_seq
       		   
		from P JOIN V
		on V.fk_professor_id = P.prof_id
		JOIN C
		on V.fk_curriculum_seq = C.curriculum_seq
		where V.fk_student_id = #{userid}
	</select>
	
	
	
	<!-- 수업  - 내 강의보기 -->	
	<select id="getlectureList" parameterType="String" resultType="com.sooRyeo.app.domain.Lecture">
		select lecture_seq, fk_course_seq
			 , video_file_name, lecture_file_name, lecture_title
			 , lecture_content
			 , start_date
     		 , end_date
		from tbl_lecture join tbl_course
		on tbl_lecture.fk_course_seq = tbl_course.course_seq
		where fk_course_seq = #{fk_course_seq}
		order by lecture_seq asc <!-- where exist = 1 -->
	</select>
	
	
	<!-- 수업 - 이번주 강의보기 -->	
	<select id="getlectureList_week" parameterType="String" resultType="com.sooRyeo.app.domain.Lecture">
		select lecture_seq, fk_course_seq
		     , video_file_name, lecture_file_name, lecture_title
		     , lecture_content
		     , start_date
		     , end_date
		from tbl_lecture join tbl_course
		on tbl_lecture.fk_course_seq = tbl_course.course_seq
		where fk_course_seq = #{fk_course_seq} AND <![CDATA[start_date <= sysdate]]> AND <![CDATA[sysdate <= end_date]]>
		order by lecture_seq asc
	</select>
	
	
	<!-- 학생정보 - 학과명 가져오기 -->
	<select id="select_department" parameterType="Integer" resultType="String">
		select department_name
		from tbl_department join tbl_student
		on tbl_department.department_seq = tbl_student.fk_department_seq
		where student_id = #{student_id}
	</select>

	<!-- 학생정보 - 비밀번호 중복 -->
	<select id="pwdDuplicateCheck" resultType="int" parameterType="String">
		select count(*)
		from tbl_student
		where student_id = to_number(#{student_id}) and pwd = #{pwd}
	</select>

	<!-- 학생정보 - 전화번호 중복 -->
	<select id="telDuplicateCheck" resultType="int" parameterType="HashMap">
		select count(*)
		from tbl_student
		where student_id = to_number(#{student_id}) and tel = #{tel}
	</select>

	<!-- 학생정보 - 이메일 중복 -->
	<select id="emailDuplicateCheck" resultType="int" parameterType="HashMap">
		select count(*)
		from tbl_student
		where student_id = to_number(#{student_id}) and email = #{email}
	</select>

	<!-- 학생정보 - 계정에 파일이 있는지 확인 -->
	<select id="select_file_name" resultType="String" parameterType="HashMap">
		select img_name
		from tbl_student
		where student_id = to_number(#{student_id}) 
	</select>
	
	<!-- 학생정보 - 계정에 기존 파일 삭제 -->
	<update id="delFilename" parameterType="String">
		update tbl_student set img_name = NULL
		where student_id = to_number(#{student_id})
	</update>

	<!-- 학생정보 수정 -->
	<update id="student_info_edit" parameterType="HashMap">
		update tbl_student set pwd = #{pwd}, postcode=#{postcode}, address = #{address}, detailAddress=#{detailAddress}, extraAddress=#{extraAddress}
		, email = #{email}, tel = #{tel}
		<choose>
			<when test='img_name != "" '>
			, img_name = #{img_name}
			</when>
		</choose>  
		where student_id = to_number(#{student_id})
	</update>


	<!-- 수업 - 내 강의 - 과제 -->
	<resultMap type="HashMap" id="assignmentMap">
		<result property="title" 					column="title"						javaType="String" />
		<result property="content" 					column="content"					javaType="String" />
		<result property="start_date" 				column="start_date"					javaType="Date" />
		<result property="end_date" 				column="end_date"					javaType="Date" />
		<result property="submit_datetime" 			column="submit_datetime"			javaType="Date" />
		<result property="schedule_seq_assignment" 	column="schedule_seq_assignment"	javaType="String" />
		<result property="fk_course_seq" 			column="fk_course_seq"				javaType="String" />
	</resultMap>
	
	<select id="getassignment_List" parameterType="HashMap" resultMap="assignmentMap">
		SELECT V.title as title
			 , V.content as content
			 , V.start_date as start_date
			 , V.end_date as end_date
			 , B.submit_datetime as submit_datetime
			 , V.schedule_seq_assignment as schedule_seq_assignment
			 , V.fk_course_seq as fk_course_seq
		FROM
		(
		    select *
		    from tbl_assignment A join tbl_schedule S
		    on A.schedule_seq_assignment = S.schedule_seq
		    where schedule_type = 1
		)V LEFT JOIN
		(
            SELECT GUAJE.schedule_seq_assignment, GUAJE_SUBMIT.submit_datetime, GUAJE_SUBMIT.fk_schedule_seq_assignment 
            FROM tbl_assignment GUAJE LEFT JOIN 
            (
              select *
              from tbl_assignment_submit
              where fk_student_id = #{userid}
            ) GUAJE_SUBMIT
            ON GUAJE.schedule_seq_assignment = GUAJE_SUBMIT.fk_schedule_seq_assignment
		) B
		on V.schedule_seq_assignment = B.fk_schedule_seq_assignment
		where V.fk_course_seq = #{fk_course_seq}
	</select>
	


	<!-- 수업 - 내 강의 - 상세내용(1) -->
	<resultMap type="HashMap" id="assignment_detail_1_map">
		<result property="schedule_seq_assignment" 	column="schedule_seq_assignment"	javaType="String" />
		<result property="title" 					column="title"						javaType="String" />
		<result property="content" 					column="content"					javaType="String" />
		<result property="start_date" 				column="start_date"					javaType="Date" />
		<result property="end_date" 				column="end_date"					javaType="Date" />
		<result property="attatched_file" 			column="attatched_file"				javaType="String" />
		<result property="fk_course_seq" 			column="fk_course_seq"				javaType="String" />
		<result property="orgfilename" 				column="orgfilename"				javaType="String" />
	</resultMap>
	<select id="getassignment_detail_1" parameterType="String" resultMap="assignment_detail_1_map" resultType="HashMap">
	    select A.schedule_seq_assignment, S.title, A.content, S.start_date, S.end_date, A.attatched_file, A.fk_course_seq, A.orgfilename
    	from tbl_assignment A join tbl_schedule S
    	on A.schedule_seq_assignment = S.schedule_seq
    	where schedule_type = 1 AND schedule_seq_assignment = #{schedule_seq_assignment}
	</select>



	<!-- 수업 - 내 강의 - 상세내용(2) -->
	<resultMap type="HashMap" id="assignment_detail_2_map">
		<result property="score" 							column="score"							javaType="String" />
		<result property="submit_datetime" 					column="submit_datetime"				javaType="Date" />
		<result property="fk_student_id" 					column="fk_student_id"					javaType="String" />
		<result property="assignment_submit_seq" 			column="assignment_submit_seq"			javaType="String" />
		<result property="attatched_file" 					column="attatched_file"					javaType="String" />
		<result property="orgfilename" 						column="orgfilename"					javaType="String" />
		<result property="content" 							column="content"						javaType="String" />
		<result property="fk_schedule_seq_assignment" 		column="fk_schedule_seq_assignment"		javaType="String" />
	</resultMap>
	<select id="getassignment_detail_2" parameterType="HashMap" resultMap="assignment_detail_2_map">
		select B.score, B.submit_datetime, B.fk_student_id, B.assignment_submit_seq, B.attatched_file, B.content, B.orgfilename, B.fk_schedule_seq_assignment
		from tbl_assignment A join tbl_assignment_submit B
		on A.schedule_seq_assignment = B.fk_schedule_seq_assignment
		where fk_student_id = #{userid} AND fk_schedule_seq_assignment = #{schedule_seq_assignment}
	</select>



	<select id="select_prof_info" parameterType="String" resultType="com.sooRyeo.app.domain.Professor">
		select prof_id, name
		from tbl_course join tbl_professor
		on fk_professor_id = prof_id
		where course_seq = #{course_seq}
	</select>
	
	
	<insert id="insert_tbl_schedule" parameterType="HashMap">
		<selectKey keyProperty="schedule_seq" resultType="String" order="BEFORE">
			select schedule_seq.nextval FROM dual
		</selectKey>
		insert into tbl_schedule(Schedule_Seq, Title, Schedule_Type, start_date, end_date, confirm)
		values(#{schedule_seq}, #{title}, '4', to_date(#{start_date}, 'yyyymmddhh24miss'), to_date(#{end_date}, 'yyyymmddhh24miss'), '0')
	</insert>
	
	<insert id="insert_tbl_consult" parameterType="HashMap">
		insert into tbl_consult(fk_Schedule_Seq, fk_student_id, fk_prof_id, content)
		values(#{schedule_seq}, #{userid}, #{prof_id}, #{content})
	</insert>
	
	
	<!-- === ajax학생 수강과목 가져와서 학점 계산하기(chart) === -->
	<resultMap type="HashMap" id="creditList_Map">
       <result property="name"    		column="name"    		javaType="String" />
       <result property="grade"         column="grade"          javaType="String" />
       <result property="semester_date" column="semester_date"  javaType="String" />
       <result property="gradename"     column="gradename"      javaType="String" />
       <result property="credit"        column="credit"         javaType="String" />
       <result property="required"      column="required"       javaType="String" />
   	</resultMap>
	<select id="select_creditList" resultMap="creditList_Map">
		select S.name as name, S.grade as grade, C.semester_date as semester_date, CU.name as gradename, CU.credit as credit, CU.required as required
		from
		tbl_student S 
		join tbl_registered_course R on S.student_id = R.fk_student_id
		join tbl_course C on R.fk_course_seq = C.course_seq
		join tbl_curriculum CU on C.fk_curriculum_seq = CU.curriculum_seq
		where student_id = #{student_id}	
	</select>
	
	
	<!-- 과제제출 -->
	<insert id="addComment" parameterType="HashMap">
		<!-- 첨부파일 없는 경우 -->
		<if test="attatched_file == null">
			insert into tbl_assignment_submit(assignment_submit_seq, fk_schedule_seq_assignment, fk_student_id, title, content) 
			values(assignment_submit_seq.nextval, #{fk_schedule_seq_assignment}, #{fk_student_id}, #{title}, #{content})
		</if>

		<!-- 첨부파일 있는 경우  -->
		<if test="attatched_file != null">
			insert into tbl_assignment_submit(assignment_submit_seq, fk_schedule_seq_assignment, fk_student_id, title, content, attatched_file, orgfilename) 
			values(assignment_submit_seq.nextval, #{fk_schedule_seq_assignment}, #{fk_student_id}, #{title}, #{content}, #{attatched_file}, #{orgfilename})
		</if>
	</insert>
	
	<select id="credit_point" parameterType="Integer" resultType="Integer">
		select sum(credit)
		from tbl_student S
		join tbl_registered_course R on S.student_id = R.fk_student_id
		join tbl_course C on R.fk_course_seq = C.course_seq
		join tbl_curriculum L on C.fk_curriculum_seq = L.curriculum_seq
		where student_id = #{student_id} and R.pass_status = 1
	</select>
	
	<insert id="application_status_change" parameterType="HashMap">
		insert into tbl_student_status_change(student_status_change_seq, fk_student_id, change_status)
		values(student_status_change_seq.nextval, #{student_id}, #{status_num})
	</insert>

	<select id="getApplication_status" parameterType="Integer" resultType="String">
		select change_status
		from tbl_student_status_change
		where fk_student_id = #{student_id}
	</select>

	<!-- 과제 제출 내용 보기 -->
	<resultMap type="HashMap" id="readcomment">
		<result property="assignment_submit_seq"	column="assignment_submit_seq"		javaType="String" />
		<result property="fk_student_id" 			column="fk_student_id"				javaType="String" />
		<result property="title" 					column="title"						javaType="String" />
		<result property="content" 					column="content"					javaType="String" />
		<result property="attatched_file" 			column="attatched_file"				javaType="String" />
		<result property="submit_datetime" 			column="submit_datetime"			javaType="Date" />
	</resultMap>
	<select id="getreadComment" parameterType="HashMap" resultMap="readcomment">
		select assignment_submit_seq, fk_student_id, title, content, attatched_file, submit_datetime
		from tbl_assignment_submit
		where fk_schedule_seq_assignment = #{fk_schedule_seq_assignment} AND fk_student_id = #{userid}
	</select>



	<!-- 파일첨부가 되어진 과제에서 서버에 업로드되어진 파일명 조회  -->
	<select id="getCommentOne" resultType="com.sooRyeo.app.dto.AssignmentSubmitDTO" parameterType="String">
		select assignment_submit_seq, attatched_file, orgfilename
		from tbl_assignment_submit
		where assignment_submit_seq = #{assignment_submit_seq}
	</select>
	
	
	<!-- // ajax학생 수강과목 가져와서 학점 계산하기(chart) 시작 -->
	<resultMap type="HashMap" id="RequiredCreditMap">
		<result property="total_Required_credit"	column="total_Required_credit"		javaType="String" />
	</resultMap>
	<select id="student_RequiredCredit" parameterType="int" resultMap="RequiredCreditMap">
		select  NVL(SUM(CU.credit), 0) AS total_Required_credit
		FROM
		tbl_student S 
		JOIN tbl_registered_course R ON S.student_id = R.fk_student_id
		JOIN tbl_course C ON R.fk_course_seq = C.course_seq
		JOIN tbl_curriculum CU ON C.fk_curriculum_seq = CU.curriculum_seq
		WHERE S.student_id = #{student_id} and CU.fk_department_seq is not null and CU.required = 1 and R.pass_status = 1
	</select>
	
	
	<resultMap type="HashMap" id="UnrequiredCreditMap">
		<result property="total_Unrequired_credit"	column="total_Unrequired_credit"		javaType="String" />
	</resultMap>
	<select id="student_UnrequiredCredit" parameterType="int" resultMap="UnrequiredCreditMap">
		select NVL(SUM(CU.credit), 0) AS total_Unrequired_credit
		FROM
		tbl_student S 
		JOIN tbl_registered_course R ON S.student_id = R.fk_student_id
		JOIN tbl_course C ON R.fk_course_seq = C.course_seq
		JOIN tbl_curriculum CU ON C.fk_curriculum_seq = CU.curriculum_seq
		WHERE S.student_id = #{student_id} and CU.fk_department_seq is not null and CU.required = 0 and R.pass_status = 1
	</select>
	
	
	<resultMap type="HashMap" id="LiberalCreditMap">
		<result property="total_Liberal_credit"	column="total_Liberal_credit"		javaType="String" />
	</resultMap>
	<select id="student_LiberalCredit" parameterType="int" resultMap="LiberalCreditMap">
		select NVL(SUM(CU.credit), 0) AS total_Liberal_credit
		FROM
		tbl_student S 
		JOIN tbl_registered_course R ON S.student_id = R.fk_student_id
		JOIN tbl_course C ON R.fk_course_seq = C.course_seq
		JOIN tbl_curriculum CU ON C.fk_curriculum_seq = CU.curriculum_seq
		WHERE S.student_id = #{student_id} and CU.fk_department_seq is null and R.pass_status = 1
	</select>
	
	
	<!-- // ajax학생 수강과목 가져와서 학점 계산하기(chart) 끝 -->
	
	
	
	<select id="getToday_lec" parameterType="Integer" resultType="com.sooRyeo.app.domain.TodayLecture">
		select distinct(cu.name) as lec_name, p.name as prof_name, credit
		from tbl_student S
		join tbl_registered_course R on S.student_id = R.fk_student_id
		join tbl_course C on R.fk_course_seq = C.course_seq
		join tbl_curriculum CU on C.fk_curriculum_seq = CU.curriculum_seq
		join tbl_time T on C.course_seq = T.fk_course_seq
		join tbl_professor P on P.prof_id = C.fk_professor_id
		where student_id = #{student_id} and 
		      day_of_week =
		CASE
		    WHEN to_char(sysdate, 'd') = '2' THEN 1 
		    WHEN to_char(sysdate, 'd') = '3' THEN 2 
		    WHEN to_char(sysdate, 'd') = '4' THEN 3 
		    WHEN to_char(sysdate, 'd') = '5' THEN 4 
		    WHEN to_char(sysdate, 'd') = '6' THEN 5
		END
	</select>
	
</mapper>