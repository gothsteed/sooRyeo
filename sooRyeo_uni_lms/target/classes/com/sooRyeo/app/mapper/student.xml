<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="student">

	<select id="selectStudent" resultType="com.sooRyeo.app.domain.Student" parameterType="com.sooRyeo.app.dto.LoginDTO">  <!-- VO에 있는 필드명과 select 해온 컬럼명은 같아야한다!! -->
		SELECT * 
		FROM tbl_student 
		WHERE student_id = #{id} AND pwd = #{password}	
	</select>
	
	
	
	
	<!-- 수업명, 교수명 select -->
	<resultMap type="HashMap" id="classListMap">
		<result property="professorName" 	column="professorName" 	 javaType="String" />
		<result property="className" 	 	column="className" 		 javaType="String" />
		<result property="department_seq" 	column="department_seq"  javaType="String" />
		<result property="required" 	 	column="required" 		 javaType="String" />
	</resultMap>
	
	
	<select id="classList" parameterType="int" resultMap="classListMap">
		WITH
		P AS (
		select name, prof_id 
		from tbl_professor
		),
		C AS (
		select curriculum_seq, name, fk_department_seq, required
		from tbl_curriculum
		),
		V AS (
			select course_seq, fk_curriculum_seq, fk_professor_id, fk_student_id
			from tbl_course join tbl_registered_course
			on course_seq = fk_course_seq
		)
		select p.name as professorName,
			   c.name as className,
			   c.fk_department_seq as department_seq,
       		   c.required as required
       		   
		from P JOIN V
		on V.fk_professor_id = P.prof_id
		JOIN C
		on V.fk_curriculum_seq = C.curriculum_seq
		where V.fk_student_id = #{userid}
	</select>
	
	
	
	<!-- 과제리스트 보여주기  -->
	<resultMap type="HashMap" id="assignmentMap">
		<result property="professorName" column="professorName"  javaType="String" />
		<result property="className" 	 column="className" 	 javaType="String" />
		<result property="title"         column="title" 	     javaType="String" />
		<result property="end_datetime"  column="end_datetime" 	 javaType="String" />
		<result property="assignment_submit_seq"  column="assignment_submit_seq" 	 javaType="String" />
	</resultMap>
	
	<select id="assignment_List" parameterType="int" resultMap="assignmentMap">
		WITH
		A AS(
		 	<![CDATA[ 
			select fk_course_seq, end_datetime, D.title, assignment_submit_seq
			from tbl_assignment D left join tbl_assignment_submit
			on assignment_seq = fk_assignment_seq
			where sysdate < end_datetime
			]]>
		),
		B AS(
			select prof_id, name
			from tbl_professor
		),
		C AS(
			select fk_student_id, course_seq, fk_professor_id, fk_curriculum_seq, name
			from tbl_registered_course join tbl_course
			on fk_course_seq = course_seq
			join tbl_curriculum
			on fk_curriculum_seq = curriculum_seq
		)
		
		select B.name as professorName, A.title, C.name as className, A.end_datetime, assignment_submit_seq
		from A join C
		on A.fk_course_seq = C.course_seq
		join B
		on C.course_seq = A.fk_course_seq
		where fk_student_id = #{userid}
	</select>

	
	<!-- 학생정보 - 학과명 가져오기 -->
	<select id="select_department" parameterType="Integer" resultType="String">
		select department_name
		from tbl_department join tbl_student
		on tbl_department.department_seq = tbl_student.fk_department_seq
		where student_id = #{student_id}
	</select>

	<!-- 내정보수정 -->



	<!-- 내정보수정-이메일중복확인 -->
	<select id="emailDuplicateCheck" parameterType="String" resultType="String">  <!-- VO에 있는 필드명과 select 해온 컬럼명은 같아야한다!! -->
		SELECT email
		FROM tbl_student
		where email = #{email}
	</select>

</mapper>